/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo, useContext, createContext } from 'react'
import { useGLTF, Merged, useAnimations } from '@react-three/drei'

const context = createContext()
export function Instances({ children, ...props }) {
  const { nodes } = useGLTF('/test-transformed.glb')
  const instances = useMemo(
    () => ({
      AlphaJoints: nodes.Alpha_Joints,
      AlphaSurface: nodes.Alpha_Surface,
    }),
    [nodes]
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => <context.Provider value={instances} children={children} />}
    </Merged>
  )
}

export function Model(props) {
  const instances = useContext(context)
  const group = useRef()
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.Hips} />
          <instances.AlphaJoints name="Alpha_Joints" />
          <instances.AlphaSurface name="Alpha_Surface" />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/test-transformed.glb')
